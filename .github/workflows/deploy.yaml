name: Deploy to Cloud Run

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Linting Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black

      - name: Run Flake8 (Linting)
        run: |
          flake8 . --max-line-length=100

      - name: Run Black (Check Format)
        run: |
          black . --check

  deploy:
    name: ðŸš€ Deploy to Cloud Run
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    env:
      REGION: us-central1
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=gcr.io/$PROJECT_ID/sudss-${{ github.ref_name }}
          gcloud builds submit --tag $IMAGE_NAME

      - name: Deploy to Cloud Run (directly set env vars from GitHub Secrets)
        run: |
          SERVICE_NAME=sudss-app-proto
          if [[ "${{ github.ref_name }}" == dev* ]]; then
            SERVICE_NAME=sudss-dev-proto
          fi

          IMAGE_NAME=gcr.io/$PROJECT_ID/sudss-app-proto${{ github.ref_name }}

          gcloud run deploy "$SERVICE_NAME" \
            --image "$IMAGE_NAME" \
            --platform managed \
            --region "$REGION" \
            --allow-unauthenticated \
            --set-env-vars "MONGO_URI=${{ secrets.MONGO_URI }},GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}"
